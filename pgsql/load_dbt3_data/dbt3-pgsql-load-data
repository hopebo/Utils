#!/bin/sh
#
# This file is released under the terms of the Artistic License.
# Please see the file LICENSE, included in this package, for details.
#
# Copyright (C) 2002-2008 Open Source Development Labs, Inc.
#               2002-2014 Mark Wong
#               2014      2ndQuadrant, Ltd.
#

load_table()
{
	table=${1}
	file=${table}.tbl

	${PSQL} << __EOF__
COPY ${table} FROM '${DSS_PATH}/${file}' USING DELIMITERS '|';
__EOF__
}

supplier()
{
	load_table supplier

	${PSQL} -c "
ALTER TABLE supplier
ADD CONSTRAINT pk_supplier PRIMARY KEY (s_suppkey) ${TS_PK_SUPPLIER};" &
	${PSQL} -c "
CREATE INDEX supplier_s_suppkey_idx_like
ON supplier (s_suppkey)
WHERE s_comment LIKE '%Customer%Complaints%';" &
	${PSQL} -c "
CREATE INDEX supplier_s_nationkey_s_suppkey_idx
ON supplier (s_nationkey, s_suppkey);" &

	wait

	${PSQL} -c "ANALYZE supplier;"
}

part()
{
	load_table part

	${PSQL} -c "
ALTER TABLE part
ADD CONSTRAINT pk_part PRIMARY KEY (p_partkey) ${TS_PK_PART};" &
	${PSQL} -c "
CREATE INDEX part_p_type_p_partkey_idx
ON part(p_type, p_partkey);" &
	${PSQL} -c "
CREATE INDEX part_p_container_p_brand_p_partkey_idx
ON part(p_container, p_brand, p_partkey);" &
	${PSQL} -c "
CREATE INDEX part_p_size_idx
ON part(p_size);" &
	${PSQL} -c "
CREATE INDEX part_p_name_idx
ON part(p_name);" &

	wait

	${PSQL} -c "ANALYZE part;"
}

partsupp()
{
	load_table partsupp

	${PSQL} -c "
ALTER TABLE partsupp
ADD CONSTRAINT pk_partsupp
PRIMARY KEY (ps_partkey, ps_suppkey) ${TS_PK_PARTSUPP};" &
	${PSQL} -c "
CREATE INDEX partsupp_ps_suppkey_idx
ON partsupp (ps_suppkey) ${TS_I_PS_SUPPKEY};" &

	wait

	${PSQL} -c "ANALYZE partsupp;"
}

customer()
{
	load_table customer

	${PSQL} -c "
ALTER TABLE customer
ADD CONSTRAINT pk_customer PRIMARY KEY (c_custkey) ${TS_PK_CUSTOMER};" &
	${PSQL} -c "
CREATE INDEX customer_c_nationkey_c_custkey_idx
ON customer (c_nationkey, c_custkey);" &
	${PSQL} -c "
CREATE INDEX customer_c_phone_idx_c_acctbal
ON customer (substr(c_phone::text, 1, 2))
WHERE c_acctbal > 0.00;" &
	${PSQL} -c "
CREATE INDEX customer_c_phone_idx
ON customer (substr(c_phone::text, 1, 2), c_acctbal);" &
	${PSQL} -c "
CREATE INDEX customer_c_mktsegment_c_custkey_idx
ON customer (c_mktsegment, c_custkey);" &

	wait

	${PSQL} -c "ANALYZE customer;"
}

orders()
{
	load_table orders

	${PSQL} -c "
ALTER TABLE orders
ADD CONSTRAINT pk_orders PRIMARY KEY (o_orderkey) ${TS_PK_ORDERS};" &
	${PSQL} -c "
CREATE INDEX orders_o_orderdate_o_orderkey_idx
ON orders (o_orderdate, o_orderkey);" &
	${PSQL} -c "
CREATE INDEX orders_o_orderkey_o_orderdate_idx
ON orders (o_orderkey, o_orderdate);" &

	wait

	${PSQL} -c "ANALYZE orders;"
}

lineitem()
{
	load_table lineitem

	${PSQL} -c "
ALTER TABLE lineitem
ADD CONSTRAINT pk_lineitem PRIMARY KEY (l_orderkey, l_linenumber) ${TS_PK_LINEITEM};" &
	${PSQL} -c "
CREATE INDEX lineitem_l_partkey_l_quantity_l_shipmode_idx
ON lineitem (l_partkey, l_quantity, l_shipmode);" &
	${PSQL} -c "
CREATE INDEX lineitem_l_orderkey_idx
ON lineitem (l_orderkey);" &
	${PSQL} -c "
CREATE INDEX lineitem_l_orderkey_idx_l_returnflag
ON lineitem (l_orderkey)
WHERE l_returnflag = 'R';" &
	${PSQL} -c "
CREATE INDEX lineitem_l_orderkey_idx_part1
ON lineitem (l_orderkey)
WHERE l_commitdate < l_receiptdate;" &
	${PSQL} -c "
CREATE INDEX lineitem_l_orderkey_idx_part2
ON lineitem (l_orderkey)
WHERE l_commitdate < l_receiptdate
  AND l_shipdate < l_commitdate;" &
	${PSQL} -c "
CREATE INDEX lineitem_l_shipdate_l_suppkey__idx
ON lineitem (l_shipdate, l_suppkey);" &
	${PSQL} -c "
CREATE INDEX lineitem_l_orderkey_l_linenumber_l_shipdate_idx
ON lineitem (l_orderkey, l_linenumber, l_shipdate);" &

	wait

	${PSQL} -c "ANALYZE lineitem;"
}

nation()
{
	load_table nation

	${PSQL} -c "
ALTER TABLE nation
ADD CONSTRAINT pk_nation PRIMARY KEY (n_nationkey) ${TS_PK_NATION};" &

	wait

	${PSQL} -c "ANALYZE nation;"
}

region()
{
	load_table region

	${PSQL} -c "
ALTER TABLE region
ADD CONSTRAINT pk_region PRIMARY KEY (r_regionkey) ${TS_PK_REGION};" &

	wait

	${PSQL} -c "ANALYZE region;"
}

USE_TABLESPACES=0
while getopts "t" OPT; do
	case ${OPT} in
	t)
		USE_TABLESPACES=1
		;;
	esac
done

PSQL="psql -v ON_ERROR_STOP=1 -X ${LOCAL_PG_PARAM}"

supplier &
part &
partsupp &
customer &
orders &
lineitem &
nation &
region &

wait
