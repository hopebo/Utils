#!/bin/bash

# Personalized bash environment settings

PROJECT_DIR=$(cd `dirname $0`; pwd)

SYSTEM_OS=`uname -s`

BASHRC=~/.bashrc

usage() {
    echo "usage: `basename $0` [-c] [-f bashrc_file]"
    echo "options:"
    echo " c - clear the contents"
    exit 1
}

while getopts "f:c" opt; do
    case ${opt} in
        f)
            BASHRC=${OPTARG}
            ;;
        c)
            CLEAR=true
            ;;
        \?)
            usage
            ;;
    esac
done

if [[ ! -f ${BASHRC} ]]; then
    echo "Error! ${BASHRC} doesn't exist."
    usage
fi

if [[ ${CLEAR} = true ]]; then
    if [[ ${SYSTEM_OS} = "Darwin" ]]; then
       PARAMETER="''"
    fi

    # In MacOS, -i option needs to be given an backup file suffix.
    eval "sed -i ${PARAMETER} '/^# Personalized/,/########### End ###########/d' \
        ${BASHRC}"
    echo "Clear succeed!"
    exit
fi

echo "" >> ${BASHRC}
echo "# Personalized bash environment settings generated" >> ${BASHRC}

# Check iOS has installed coreutils
if [[ ${SYSTEM_OS} = "Darwin" ]]; then
    if command brew --version > /dev/null 2>&1 &&
           brew list | grep coreutils > /dev/null 2>&1 ; then
        GNU_UTILS_INSTALLED=true
        COREUTILS_PATH=`brew --prefix coreutils`/libexec/gnubin
        PATH=${COREUTILS_PATH}:${PATH}
        echo -e "export PATH=\"${COREUTILS_PATH}:\${PATH}\"\n" \
             >> ${BASHRC}
    else
        cat <<EOF
Please install coreutils to get all the features using:
  brew install coreutils
EOF
    fi
fi

if [[ ${SYSTEM_OS} = "Linux" ]] || [[ ${GNU_UTILS_INSTALLED} = true ]]; then
    echo "# LS_COLORS setting" >> ${BASHRC}
    dircolors -b ${PROJECT_DIR}/resource/LS_COLORS >> ${BASHRC}
    echo "" >> ${BASHRC}

    echo "# Alias setting" >> ${BASHRC}
    cat ${PROJECT_DIR}/alias >> ${BASHRC}
    echo "" >> ${BASHRC}

    if [[ -s ${PROJECT_DIR}/alias-${SYSTEM_OS} ]]; then
        echo "# OS specified alias setting" >> ${BASHRC}
        cat ${PROJECT_DIR}/alias-${SYSTEM_OS} >> ${BASHRC}
        echo "" >> ${BASHRC}
    fi

    echo "# Environment setting" >> ${BASHRC}
    cat ${PROJECT_DIR}/variables >> ${BASHRC}
    echo "" >> ${BASHRC}

    cat <<EOF
Use the following command to apply these features:
  source ${BASHRC}
EOF
fi

echo "########### End ###########" >> ${BASHRC}
